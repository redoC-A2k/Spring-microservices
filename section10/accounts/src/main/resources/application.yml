server:
    port: 8080
    # servlet:
    #     context-path: /${spring.application.api-version}
    
spring:
    datasource:
        url: jdbc:mysql://localhost:3306/accountsdb
        username: root
        password: root

    jpa:
        show-sql: true
    
    sql:
        init:
            mode: always

    application:
        name: accounts

    profiles:
        active: 
            - prod
    
    cloud:
        openfeign:
            circuitbreaker:
                enabled: true
    
    config:
        import: optional:configserver:http://localhost:8071  #optional -> start the microservice even if the configserver is down, configserver-> it will always be mentioned to indicate that this is url of config server even if the name of configserver was something else even then here configserver will be mentioned it is not releted to name of config server in any way, http://localhost:8071 -> url of the configserver 
    
eureka:
    instance:
        prefer-ip-address: true # use ip address instead of hostname
    client:
        fetch-registry: true
        register-with-eureka: true
        service-url:
            defaultZone: http://localhost:8070/eureka/

management:
    endpoints:
        web:
            exposure:
                include: "*"
    
        jmx:
            exposure:
                include:
                    - shutdown # to enable the shutdown
    health:
        readinessstate:
            enabled: true
        livenessstate:
            enabled: true

    info:
        env:
            enabled: true # to show the environment details in the info endpoint

    endpoint:
        shutdown:
            enabled: true # to enable the shutdown endpoint in actuator
        health:
            probes:
                enabled: true


info:
    app:
        name: accounts
        description: Accounts Microservice
        version: 1.0.0

logging:
    level:
        com:
            redoca2k:
                accounts: DEBUG

resilience4j.circuitbreaker:
    configs:
        default:
            slidingWindowSize: 10
            permitted-number-of-calls-in-half-open-state: 2
            failure-rate-threshold: 50
            wait-duration-in-open-state: 10000

resilience4j.retry:
    configs:
        default:
            max-attempts: 3
            waitDuration: 500
            enable-exponential-backoff: true
            exponential-backoff-multiplier: 2
            ignore-exceptions:
                - java.lang.NullPointerException # ignore nullpointer exception i.e do not retry if we get null pointer exceptions